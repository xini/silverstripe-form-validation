{"version":3,"sources":["node_modules/formbouncerjs/src/js/bouncer/bouncer.js","src/javascript/components/validation-init.js"],"names":["root","factory","extend","initFormValidation","validatorName","validators","checkboxSet","field","wrapper","closest","checkboxes","querySelectorAll","length","checkedCount","i","checked","messages","missingValue","checkbox","radio","select","select-multiple","default","patternMismatch","email","url","number","color","date","time","month","outOfRange","over","under","wrongLength","bouncerValidators","window","hasOwnProperty","validator","message","bouncerMessages","forms","document","Array","prototype","forEach","call","form","formID","disableSumbit","hasAttribute","getAttribute","classList","contains","Bouncer","fieldClass","errorClass","customValidations","disableSubmit","addEventListener","event","target","index","remove","querySelector","appendChild","global","this","defaults","fieldPrefix","errorPrefix","patterns","messageAfterField","messageCustom","messageTarget","fallback","emitEvents","arr","callback","merged","arguments","obj","key","Object","toString","emitEvent","elem","type","details","CustomEvent","bubbles","detail","dispatchEvent","value","filter","escapeCharacters","name","btn","settings","pattern","RegExp","match","max","min","num","parseFloat","runValidations","errors","validations","test","hasErrors","id","codeUnit","string","String","result","firstCodeUnit","charCodeAt","InvalidCharacterError","charAt","getFieldID","create","Math","floor","random","getErrorField","group","getErrorLocation","selector","location","firstChild","createTextNode","nextSibling","parentNode","createError","error","createElement","fieldTarget","className","insertBefore","getErrorMessage","replace","addErrorAttributes","add","setAttribute","showErrorAttributes","button","removeAttributes","removeAttribute","removeErrorAttributes","removeError","removeChild","options","blurHandler","matches","publicAPIs","validate","inputHandler","submitHandler","submitter","validateAll","focus","preventDefault","disabled","readOnly","_settings","isValid","valid","msg","textContent","destroy","removeEventListener","define","amd","exports","module","extended","deep","prop","merge","readyState"],"mappings":"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","file":"form-validation.js","sourcesContent":["(function (root, factory) {\n\tif ( typeof define === 'function' && define.amd ) {\n\t\tdefine([], function () {\n\t\t\treturn factory(root);\n\t\t});\n\t} else if ( typeof exports === 'object' ) {\n\t\tmodule.exports = factory(root);\n\t} else {\n\t\troot.Bouncer = factory(root);\n\t}\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n\n\t'use strict';\n\n\t//\n\t// Variables\n\t//\n\n\tvar defaults = {\n\n\t\t// Classes & IDs\n\n\t\tfieldClass: 'error',\n\t\terrorClass: 'error-message',\n\t\tfieldPrefix: 'bouncer-field_',\n\t\terrorPrefix: 'bouncer-error_',\n\n\t\t// Patterns\n\t\tpatterns: {\n\t\t\temail: /^([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22))*\\x40([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d))*(\\.\\w{2,})+$/,\n\t\t\turl: /^(?:(?:https?|HTTPS?|ftp|FTP):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-zA-Z\\u00a1-\\uffff0-9]-*)*[a-zA-Z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-zA-Z\\u00a1-\\uffff0-9]-*)*[a-zA-Z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-zA-Z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/,\n\t\t\tnumber: /^(?:[-+]?[0-9]*[.,]?[0-9]+)$/,\n\t\t\tcolor: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/,\n\t\t\tdate: /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))/,\n\t\t\ttime: /^(?:(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]))$/,\n\t\t\tmonth: /^(?:(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])))$/\n\t\t},\n\n\t\t// Custom Validations\n\t\tcustomValidations: {},\n\n\t\t// Messages\n\t\tmessageAfterField: true,\n\t\tmessageCustom: 'data-bouncer-message',\n\t\tmessageTarget: 'data-bouncer-target',\n\t\tmessages: {\n\t\t\tmissingValue: {\n\t\t\t\tcheckbox: 'This field is required.',\n\t\t\t\tradio: 'Please select a value.',\n\t\t\t\tselect: 'Please select a value.',\n\t\t\t\t'select-multiple': 'Please select at least one value.',\n\t\t\t\tdefault: 'Please fill out this field.'\n\t\t\t},\n\t\t\tpatternMismatch: {\n\t\t\t\temail: 'Please enter a valid email address.',\n\t\t\t\turl: 'Please enter a URL.',\n\t\t\t\tnumber: 'Please enter a number',\n\t\t\t\tcolor: 'Please match the following format: #rrggbb',\n\t\t\t\tdate: 'Please use the YYYY-MM-DD format',\n\t\t\t\ttime: 'Please use the 24-hour time format. Ex. 23:00',\n\t\t\t\tmonth: 'Please use the YYYY-MM format',\n\t\t\t\tdefault: 'Please match the requested format.'\n\t\t\t},\n\t\t\toutOfRange: {\n\t\t\t\tover: 'Please select a value that is no more than {max}.',\n\t\t\t\tunder: 'Please select a value that is no less than {min}.'\n\t\t\t},\n\t\t\twrongLength: {\n\t\t\t\tover: 'Please shorten this text to no more than {maxLength} characters. You are currently using {length} characters.',\n\t\t\t\tunder: 'Please lengthen this text to {minLength} characters or more. You are currently using {length} characters.'\n\t\t\t},\n\t\t\tfallback: 'There was an error with this field.'\n\t\t},\n\n\t\t// Form Submission\n\t\tdisableSubmit: false,\n\n\t\t// Custom Events\n\t\temitEvents: true\n\n\t};\n\n\n\t//\n\t// Methods\n\t//\n\n\t/**\n\t * A wrapper for Array.prototype.forEach() for non-arrays\n\t * @param  {Array-like} arr      The array-like object\n\t * @param  {Function}   callback The callback to run\n\t */\n\tvar forEach = function (arr, callback) {\n\t\tArray.prototype.forEach.call(arr, callback);\n\t};\n\n\t/**\n\t * Merge two or more objects together.\n\t * @param   {Object}   objects  The objects to merge together\n\t * @returns {Object}            Merged values of defaults and options\n\t */\n\tvar extend = function () {\n\t\tvar merged = {};\n\t\tforEach(arguments, function (obj) {\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (!obj.hasOwnProperty(key)) return;\n\t\t\t\tif (Object.prototype.toString.call(obj[key]) === '[object Object]') {\n\t\t\t\t\tmerged[key] = extend(merged[key], obj[key]);\n\t\t\t\t} else {\n\t\t\t\t\tmerged[key] = obj[key];\n\t\t\t\t}\n\t\t\t\t// merged[key] = obj[key];\n\t\t\t}\n\t\t});\n\t\treturn merged;\n\t};\n\n\t/**\n\t * Emit a custom event\n\t * @param  {String} type    The event type\n\t * @param  {Object} options The settings object\n\t * @param  {Node}   anchor  The anchor element\n\t * @param  {Node}   toggle  The toggle element\n\t */\n\tvar emitEvent = function (elem, type, details) {\n\t\tif (typeof window.CustomEvent !== 'function') return;\n\t\tvar event = new CustomEvent(type, {\n\t\t\tbubbles: true,\n\t\t\tdetail: details || {}\n\t\t});\n\t\telem.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Add the `novalidate` attribute to all forms\n\t * @param {Boolean} remove  If true, remove the `novalidate` attribute\n\t */\n\tvar addNoValidate = function (selector) {\n\t\tforEach(document.querySelectorAll(selector), function (form) {\n\t\t\tform.setAttribute('novalidate', true);\n\t\t});\n\t};\n\n\t/**\n\t * Remove the `novalidate` attribute to all forms\n\t */\n\tvar removeNoValidate = function (selector) {\n\t\tforEach(document.querySelectorAll(selector), function (form) {\n\t\t\tform.removeAttribute('novalidate');\n\t\t});\n\t};\n\n\t/**\n\t * Check if a required field is missing its value\n\t * @param  {Node} field The field to check\n\t * @return {Boolean}       It true, field is missing it's value\n\t */\n\tvar missingValue = function (field) {\n\n\t\t// If not required, bail\n\t\tif (!field.hasAttribute('required')) return false;\n\n\t\t// Handle checkboxes\n\t\tif (field.type === 'checkbox') {\n\t\t\treturn !field.checked;\n\t\t}\n\n\t\t// Get the field value length\n\t\tvar length = field.value.length;\n\n\t\t// Handle radio buttons\n\t\tif (field.type === 'radio') {\n\t\t\tlength = Array.prototype.filter.call(field.form.querySelectorAll('[name=\"' + escapeCharacters(field.name) + '\"]'), function (btn) {\n\t\t\t\treturn btn.checked;\n\t\t\t}).length;\n\t\t}\n\n\t\t// Check for value\n\t\treturn length < 1;\n\n\t};\n\n\t/**\n\t * Check if field value doesn't match a patter.\n\t * @param  {Node}   field    The field to check\n\t * @param  {Object} settings The plugin settings\n\t * @see https://www.w3.org/TR/html51/sec-forms.html#the-pattern-attribute\n\t * @return {Boolean}         If true, there's a pattern mismatch\n\t */\n\tvar patternMismatch = function (field, settings) {\n\n\t\t// Check if there's a pattern to match\n\t\tvar pattern = field.getAttribute('pattern');\n\t\tpattern = pattern ? new RegExp('^(?:' + pattern + ')$') : settings.patterns[field.type];\n\t\tif (!pattern || !field.value || field.value.length < 1) return false;\n\n\t\t// Validate the pattern\n\t\treturn field.value.match(pattern) ? false : true;\n\n\t};\n\n\t/**\n\t * Check if field value is out-of-range\n\t * @param  {Node}    field    The field to check\n\t * @return {String}           Returns 'over', 'under', or false\n\t */\n\tvar outOfRange = function (field) {\n\n\t\t// Make sure field has value\n\t\tif (!field.value || field.value.length < 1) return false;\n\n\t\t// Check for range\n\t\tvar max = field.getAttribute('max');\n\t\tvar min = field.getAttribute('min');\n\n\t\t// Check validity\n\t\tvar num = parseFloat(field.value);\n\t\tif (max && num > max) return 'over';\n\t\tif (min && num < min) return 'under';\n\t\treturn false;\n\n\t};\n\n\t/**\n\t * Check if the field value is too long or too short\n\t * @param  {Node}   field    The field to check\n\t * @return {String}           Returns 'over', 'under', or false\n\t */\n\tvar wrongLength = function (field) {\n\n\t\t// Make sure field has value\n\t\tif (!field.value || field.value.length < 1) return false;\n\n\t\t// Check for min/max length\n\t\tvar max = field.getAttribute('maxlength');\n\t\tvar min = field.getAttribute('minlength');\n\n\t\t// Check validity\n\t\tvar length = field.value.length;\n\t\tif (max && length > max) return 'over';\n\t\tif (min && length < min) return 'under';\n\t\treturn false;\n\n\t};\n\n\t/**\n\t * Test for standard field validations\n\t * @param  {Node}   field    The field to test\n\t * @param  {Object} settings The plugin settings\n\t * @return {Object}          The tests and their results\n\t */\n\tvar runValidations = function (field, settings) {\n\t\treturn {\n\t\t\tmissingValue: missingValue(field),\n\t\t\tpatternMismatch: patternMismatch(field, settings),\n\t\t\toutOfRange: outOfRange(field),\n\t\t\twrongLength: wrongLength(field)\n\t\t};\n\t};\n\n\t/**\n\t * Run any provided custom validations\n\t * @param  {Node}   field       The field to test\n\t * @param  {Object} errors      The existing errors\n\t * @param  {Object} validations The custom validations to run\n\t * @param  {Object} settings    The plugin settings\n\t * @return {Object}             The tests and their results\n\t */\n\tvar customValidations = function (field, errors, validations, settings) {\n\t\tfor (var test in validations) {\n\t\t\tif (validations.hasOwnProperty(test)) {\n\t\t\t\terrors[test] = validations[test](field, settings);\n\t\t\t}\n\t\t}\n\t\treturn errors;\n\t};\n\n\t/**\n\t * Check if a field has any errors\n\t * @param  {Object}  errors The validation test results\n\t * @return {Boolean}        Returns true if there are errors\n\t */\n\tvar hasErrors = function (errors) {\n\t\tfor (var type in errors) {\n\t\t\tif (errors[type]) return true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Check a field for errors\n\t * @param  {Node} field      The field to test\n\t * @param  {Object} settings The plugin settings\n\t * @return {Object}          The field validity and errors\n\t */\n\tvar getErrors = function (field, settings) {\n\n\t\t// Get standard validation errors\n\t\tvar errors = runValidations(field,settings);\n\n\t\t// Check for custom validations\n\t\terrors = customValidations(field, errors, settings.customValidations, settings);\n\n\t\treturn {\n\t\t\tvalid: !hasErrors(errors),\n\t\t\terrors: errors\n\t\t};\n\n\t};\n\n\t/**\n\t * Escape special characters for use with querySelector\n\t * @author Mathias Bynens\n\t * @link https://github.com/mathiasbynens/CSS.escape\n\t * @param {String} id The anchor ID to escape\n\t */\n\tvar escapeCharacters = function (id) {\n\n\t\tvar string = String(id);\n\t\tvar length = string.length;\n\t\tvar index = -1;\n\t\tvar codeUnit;\n\t\tvar result = '';\n\t\tvar firstCodeUnit = string.charCodeAt(0);\n\t\twhile (++index < length) {\n\t\t\tcodeUnit = string.charCodeAt(index);\n\t\t\t// Note: there’s no need to special-case astral symbols, surrogate\n\t\t\t// pairs, or lone surrogates.\n\n\t\t\t// If the character is NULL (U+0000), then throw an\n\t\t\t// `InvalidCharacterError` exception and terminate these steps.\n\t\t\tif (codeUnit === 0x0000) {\n\t\t\t\tthrow new InvalidCharacterError(\n\t\t\t\t\t'Invalid character: the input contains U+0000.'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t// If the character is in the range [\\1-\\1F] (U+0001 to U+001F) or is\n\t\t\t\t// U+007F, […]\n\t\t\t\t(codeUnit >= 0x0001 && codeUnit <= 0x001F) || codeUnit == 0x007F ||\n\t\t\t\t// If the character is the first character and is in the range [0-9]\n\t\t\t\t// (U+0030 to U+0039), […]\n\t\t\t\t(index === 0 && codeUnit >= 0x0030 && codeUnit <= 0x0039) ||\n\t\t\t\t// If the character is the second character and is in the range [0-9]\n\t\t\t\t// (U+0030 to U+0039) and the first character is a `-` (U+002D), […]\n\t\t\t\t(\n\t\t\t\t\tindex === 1 &&\n\t\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 &&\n\t\t\t\t\tfirstCodeUnit === 0x002D\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// http://dev.w3.org/csswg/cssom/#escape-a-character-as-code-point\n\t\t\t\tresult += '\\\\' + codeUnit.toString(16) + ' ';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If the character is not handled by one of the above rules and is\n\t\t\t// greater than or equal to U+0080, is `-` (U+002D) or `_` (U+005F), or\n\t\t\t// is in one of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to\n\t\t\t// U+005A), or [a-z] (U+0061 to U+007A), […]\n\t\t\tif (\n\t\t\t\tcodeUnit >= 0x0080 ||\n\t\t\t\tcodeUnit === 0x002D ||\n\t\t\t\tcodeUnit === 0x005F ||\n\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 ||\n\t\t\t\tcodeUnit >= 0x0041 && codeUnit <= 0x005A ||\n\t\t\t\tcodeUnit >= 0x0061 && codeUnit <= 0x007A\n\t\t\t) {\n\t\t\t\t// the character itself\n\t\t\t\tresult += string.charAt(index);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Otherwise, the escaped character.\n\t\t\t// http://dev.w3.org/csswg/cssom/#escape-a-character\n\t\t\tresult += '\\\\' + string.charAt(index);\n\n\t\t}\n\n\t\t// Return sanitized hash\n\t\treturn result;\n\n\t};\n\n\t/**\n\t * Get or create an ID for a field\n\t * @param  {Node}    field    The field\n\t * @param  {Object}  settings The plugin settings\n\t * @param  {Boolean} create   If true, create an ID if there isn't one\n\t * @return {String}           The field ID\n\t */\n\tvar getFieldID = function (field, settings, create) {\n\t\tvar id = field.name ? field.name : field.id;\n\t\tif (!id && create) {\n\t\t\tid = settings.fieldPrefix + Math.floor(Math.random() * 999);\n\t\t\tfield.id = id;\n\t\t}\n\t\tif (field.type === 'checkbox') {\n\t\t\tid += '_' + (field.value || field.id);\n\t\t}\n\t\treturn id;\n\t};\n\n\t/**\n\t * Special handling for radio buttons and checkboxes wrapped in labels.\n\t * @param  {Node} field The field with the error\n\t * @return {Node}       The field to show the error on\n\t */\n\tvar getErrorField = function (field) {\n\n\t\t// If the field is a radio button, get the last item in the radio group\n\t\t// @todo if location is before, get first item\n\t\tif (field.type === 'radio' && field.name) {\n\t\t\tvar group = field.form.querySelectorAll('[name=\"' + escapeCharacters(field.name) + '\"]');\n\t\t\tfield = group[group.length - 1];\n\t\t}\n\n\t\t// Get the associated label for radio button or checkbox\n\t\tif (field.type === 'radio' || field.type === 'checkbox') {\n\t\t\tvar label = field.closest('label') || field.form.querySelector('[for=\"' + field.id + '\"]');\n\t\t\tfield = label || field;\n\t\t}\n\n\t\treturn field;\n\n\t};\n\n\t/**\n\t * Get the location for a field's error message\n\t * @param  {Node}   field    The field\n\t * @param  {Node}   target   The target for error message\n\t * @param  {Object} settings The plugin settings\n\t * @return {Node}            The error location\n\t */\n\tvar getErrorLocation = function (field, target, settings) {\n\n\t\t// Check for a custom error message\n\t\tvar selector = field.getAttribute(settings.messageTarget);\n\t\tif (selector) {\n\t\t\tvar location = field.form.querySelector(selector);\n\t\t\tif (location) {\n\t\t\t\t// @bugfix by @HaroldPutman\n\t\t\t\t// https://github.com/cferdinandi/bouncer/pull/28\n\t\t\t\treturn location.firstChild || location.appendChild(document.createTextNode(''));\n\t\t\t}\n\t\t}\n\n\t\t// If the message should come after the field\n\t\tif (settings.messageAfterField) {\n\n\t\t\t// If there's no next sibling, create one\n\t\t\tif (!target.nextSibling) {\n\t\t\t\ttarget.parentNode.appendChild(document.createTextNode(''));\n\t\t\t}\n\n\t\t\treturn target.nextSibling;\n\n\t\t}\n\n\t\t// If it should come before\n\t\treturn target;\n\n\t};\n\n\t/**\n\t * Create a validation error message node\n\t * @param  {Node} field      The field\n\t * @param  {Object} settings The plugin settings\n\t * @return {Node}            The error message node\n\t */\n\tvar createError = function (field, settings) {\n\n\t\t// Create the error message\n\t\tvar error = document.createElement('div');\n\t\terror.className = settings.errorClass;\n\t\terror.id = settings.errorPrefix + getFieldID(field, settings, true);\n\n\t\t// If the field is a radio button or checkbox, grab the last field label\n\t\tvar fieldTarget = getErrorField(field);\n\n\t\t// Inject the error message into the DOM\n\t\tvar location = getErrorLocation(field, fieldTarget, settings);\n\t\tlocation.parentNode.insertBefore(error, location);\n\n\t\treturn error;\n\n\t};\n\n\t/**\n\t * Get the error message test\n\t * @param  {Node}            field    The field to get an error message for\n\t * @param  {Object}          errors   The errors on the field\n\t * @param  {Object}          settings The plugin settings\n\t * @return {String|Function}          The error message\n\t */\n\tvar getErrorMessage = function (field, errors, settings) {\n\n\t\t// Variables\n\t\tvar messages = settings.messages;\n\n\t\t// Missing value error\n\t\tif (errors.missingValue) {\n\t\t\treturn messages.missingValue[field.type] || messages.missingValue.default;\n\t\t}\n\n\t\t// Numbers that are out of range\n\t\tif (errors.outOfRange) {\n\t\t\treturn messages.outOfRange[errors.outOfRange].replace('{max}', field.getAttribute('max')).replace('{min}', field.getAttribute('min')).replace('{length}', field.value.length);\n\t\t}\n\n\t\t// Values that are too long or short\n\t\tif (errors.wrongLength) {\n\t\t\treturn messages.wrongLength[errors.wrongLength].replace('{maxLength}', field.getAttribute('maxlength')).replace('{minLength}', field.getAttribute('minlength')).replace('{length}', field.value.length);\n\t\t}\n\n\t\t// Pattern mismatch error\n\t\tif (errors.patternMismatch) {\n\t\t\tvar custom = field.getAttribute(settings.messageCustom);\n\t\t\tif (custom) return custom;\n\t\t\treturn messages.patternMismatch[field.type] || messages.patternMismatch.default;\n\t\t}\n\n\t\t// Custom validations\n\t\tfor (var test in settings.customValidations) {\n\t\t\tif (settings.customValidations.hasOwnProperty(test)) {\n\t\t\t\tif (errors[test] && messages[test]) return messages[test];\n\t\t\t}\n\t\t}\n\n\t\t// Fallback error message\n\t\treturn messages.fallback;\n\n\t};\n\n\t/**\n\t * Add error attributes to a field\n\t * @param  {Node}   field    The field with the error message\n\t * @param  {Node}   error    The error message\n\t * @param  {Object} settings The plugin settings\n\t */\n\tvar addErrorAttributes = function (field, error, settings) {\n\t\tfield.classList.add(settings.fieldClass);\n\t\tfield.setAttribute('aria-describedby', error.id);\n\t\tfield.setAttribute('aria-invalid', true);\n\t};\n\n\t/**\n\t * Show error attributes on a field or radio/checkbox group\n\t * @param  {Node}   field    The field with the error message\n\t * @param  {Node}   error    The error message\n\t * @param  {Object} settings The plugin settings\n\t */\n\tvar showErrorAttributes = function (field, error, settings) {\n\n\t\t// If field is a radio button, add attributes to every button in the group\n\t\tif (field.type === 'radio' && field.name) {\n\t\t\tArray.prototype.forEach.call(document.querySelectorAll('[name=\"' + field.name + '\"]'), function (button) {\n\t\t\t\taddErrorAttributes(button, error, settings);\n\t\t\t});\n\t\t}\n\n\t\t// Otherwise, add an error class and aria attribute to the field\n\t\taddErrorAttributes(field, error, settings);\n\n\t};\n\n\t/**\n\t * Show an error message in the DOM\n\t * @param  {Node} field      The field to show an error message for\n\t * @param  {Object}          errors   The errors on the field\n\t * @param  {Object}          settings The plugin settings\n\t */\n\tvar showError = function (field, errors, settings) {\n\n\t\t// Get/create an error message\n\t\tvar error = field.form.querySelector('#' + escapeCharacters(settings.errorPrefix + getFieldID(field, settings))) || createError(field, settings);\n\t\tvar msg = getErrorMessage(field, errors, settings);\n\t\terror.textContent = typeof msg === 'function' ? msg(field, settings) : msg;\n\n\t\t// Add error attributes\n\t\tshowErrorAttributes(field, error, settings);\n\n\t\t// Emit custom event\n\t\tif (settings.emitEvents) {\n\t\t\temitEvent(field, 'bouncerShowError', {\n\t\t\t\terrors: errors\n\t\t\t});\n\t\t}\n\n\t};\n\n\t/**\n\t * Remove error attributes from a field\n\t * @param  {Node}   field    The field with the error message\n\t * @param  {Node}   error    The error message\n\t * @param  {Object} settings The plugin settings\n\t */\n\tvar removeAttributes = function (field, settings) {\n\t\tfield.classList.remove(settings.fieldClass);\n\t\tfield.removeAttribute('aria-describedby');\n\t\tfield.removeAttribute('aria-invalid');\n\t};\n\n\t/**\n\t * Remove error attributes from the field or radio group\n\t * @param  {Node}   field    The field with the error message\n\t * @param  {Node}   error    The error message\n\t * @param  {Object} settings The plugin settings\n\t */\n\tvar removeErrorAttributes = function (field, settings) {\n\n\t\t// If field is a radio button, remove attributes from every button in the group\n\t\tif (field.type === 'radio' && field.name) {\n\t\t\tArray.prototype.forEach.call(document.querySelectorAll('[name=\"' + field.name + '\"]'), function (button) {\n\t\t\t\tremoveAttributes(button, settings);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\t// Otherwise, add an error class and aria attribute to the field\n\t\tremoveAttributes(field, settings);\n\n\t};\n\n\t/**\n\t * Remove an error message from the DOM\n\t * @param  {Node} field      The field with the error message\n\t * @param  {Object} settings The plugin settings\n\t */\n\tvar removeError = function (field, settings) {\n\n\t\t// Get the error message for this field\n\t\tvar error = field.form.querySelector('#' + escapeCharacters(settings.errorPrefix + getFieldID(field, settings)));\n\t\tif (!error) return;\n\n\t\t// Remove the error\n\t\terror.parentNode.removeChild(error);\n\n\t\t// Remove error and a11y from the field\n\t\tremoveErrorAttributes(field, settings);\n\n\t\t// Emit custom event\n\t\tif (settings.emitEvents) {\n\t\t\temitEvent(field, 'bouncerRemoveError');\n\t\t}\n\n\t};\n\n\t/**\n\t * Remove errors from all fields\n\t * @param  {String} selector The selector for the form\n\t * @param  {Object} settings The plugin settings\n\t */\n\tvar removeAllErrors = function (selector, settings) {\n\t\tforEach(document.querySelectorAll(selector), function (form) {\n\t\t\tforEach(form.querySelectorAll('input, select, textarea'), function (field) {\n\t\t\t\tremoveError(field, settings);\n\t\t\t});\n\t\t});\n\t};\n\n\t/**\n\t * The plugin constructor\n\t * @param {String} selector The selector to use for forms to be validated\n\t * @param {Object} options  User settings [optional]\n\t */\n\tvar Constructor = function (selector, options) {\n\n\t\t//\n\t\t// Variables\n\t\t//\n\n\t\tvar publicAPIs = {};\n\t\tvar settings;\n\n\n\t\t//\n\t\t// Methods\n\t\t//\n\n\t\t/**\n\t\t * Validate a field\n\t\t * @param  {Node} field     The field to validate\n\t\t * @param  {Object} options Validation options\n\t\t * @return {Object}         The validity state and errors\n\t\t */\n\t\tpublicAPIs.validate = function (field, options) {\n\n\t\t\t// Don't validate submits, buttons, file and reset inputs, and disabled and readonly fields\n\t\t\tif (field.disabled || field.readOnly || field.type === 'reset' || field.type === 'submit' || field.type === 'button') return;\n\n\t\t\t// Local settings\n\t\t\tvar _settings = extend(settings, options || {});\n\n\t\t\t// Check for errors\n\t\t\tvar isValid = getErrors(field, _settings);\n\n\t\t\t// If valid, remove any error messages\n\t\t\tif (isValid.valid) {\n\t\t\t\tremoveError(field, _settings);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, show an error message\n\t\t\tshowError(field, isValid.errors, _settings);\n\n\t\t\treturn isValid;\n\n\t\t};\n\n\t\t/**\n\t\t * Validate all fields in a form or section\n\t\t * @param  {Node} target The form or section to validate fields in\n\t\t * @return {Array}       An array of fields with errors\n\t\t */\n\t\tpublicAPIs.validateAll = function (target) {\n\t\t\treturn Array.prototype.filter.call(target.querySelectorAll('input, select, textarea'), function (field) {\n\t\t\t\tvar validate = publicAPIs.validate(field);\n\t\t\t\treturn validate && !validate.valid;\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Run a validation on field blur\n\t\t */\n\t\tvar blurHandler = function (event) {\n\n\t\t\t// Only run if the field is in a form to be validated\n\t\t\tif (!event.target.form || !event.target.form.matches(selector)) return;\n\n\t\t\t// Validate the field\n\t\t\tpublicAPIs.validate(event.target);\n\n\t\t};\n\n\t\t/**\n\t\t * Run a validation on a fields with errors when the value changes\n\t\t */\n\t\tvar inputHandler = function (event) {\n\n\t\t\t// Only run if the field is in a form to be validated\n\t\t\tif (!event.target.form || !event.target.form.matches(selector)) return;\n\n\t\t\t// Only run on fields with errors\n\t\t\tif (!event.target.classList.contains(settings.fieldClass)) return;\n\n\t\t\t// Validate the field\n\t\t\tpublicAPIs.validate(event.target);\n\n\t\t};\n\n\t\t/**\n\t\t * Validate an entire form when it's submitted\n\t\t */\n\t\tvar submitHandler = function (event) {\n\n\t\t\t// Only run on matching elements\n\t\t\tif (!event.target.matches(selector)) return;\n\n            // skip validation if button with class .skip-validation is clicked\n            if (event.submitter && event.submitter.classList.contains('skip-validation')) return;\n\n\t\t\t// Validate each field\n\t\t\tvar errors = publicAPIs.validateAll(event.target);\n\n\t\t\t// If there are errors, focus on the first one\n\t\t\tif (errors.length > 0) {\n\t\t\t\terrors[0].focus();\n\t\t\t\temitEvent(event.target, 'bouncerFormInvalid', {errors: errors});\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Emit custom event\n\t\t\tif (settings.emitEvents) {\n\t\t\t\temitEvent(event.target, 'bouncerFormValid');\n\t\t\t}\n\n\t\t\t// Prevent form submission if disabled\n\t\t\tif (settings.disableSubmit) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t};\n\n\t\t/**\n\t\t * Destroy the current plugin instantiation\n\t\t */\n\t\tpublicAPIs.destroy = function () {\n\n\t\t\t// Remove event listeners\n\t\t\tdocument.removeEventListener('blur', blurHandler, true);\n\t\t\tdocument.removeEventListener('input', inputHandler, false);\n\t\t\tdocument.removeEventListener('click', inputHandler, false);\n\t\t\tdocument.removeEventListener('submit', submitHandler, false);\n\n\t\t\t// Remove all errors\n\t\t\tremoveAllErrors(selector, settings);\n\n\t\t\t// Remove novalidate attribute\n\t\t\tremoveNoValidate(selector);\n\n\t\t\t// Emit custom event\n\t\t\tif (settings.emitEvents) {\n\t\t\t\temitEvent(document, 'bouncerDestroyed', {\n\t\t\t\t\tsettings: settings\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Reset settings\n\t\t\tsettings = null;\n\n\t\t};\n\n\t\t/**\n\t\t * Instantiate a new instance of the plugin\n\t\t */\n\t\tvar init = function () {\n\n\t\t\t// Create settings\n\t\t\tsettings = extend(defaults, options || {});\n\n\t\t\t// Add novalidate attribute\n\t\t\taddNoValidate(selector);\n\n\t\t\t// Event Listeners\n\t\t\tdocument.addEventListener('blur', blurHandler, true);\n\t\t\tdocument.addEventListener('input', inputHandler, false);\n\t\t\tdocument.addEventListener('click', inputHandler, false);\n\t\t\tdocument.addEventListener('submit', submitHandler, false);\n\n\t\t\t// Emit custom event\n\t\t\tif (settings.emitEvents) {\n\t\t\t\temitEvent(document, 'bouncerInitialized', {\n\t\t\t\t\tsettings: settings\n\t\t\t\t});\n\t\t\t}\n\n\t\t};\n\n\t\t//\n\t\t// Inits & Event Listeners\n\t\t//\n\n\t\tinit();\n\t\treturn publicAPIs;\n\n\t};\n\n\n\t//\n\t// Return the constructor\n\t//\n\n\treturn Constructor;\n\n});\n",";(function () {\n    'use strict';\n\n    function initFormValidation() {\n        // define custom validations\n        var validators = {\n            // custom validator for checkbox groups\n            // currently not working, see https://github.com/cferdinandi/bouncer/issues/40\n            // and https://github.com/cferdinandi/bouncer/issues/47\n            checkboxSet: function(field) {\n                // where at least one checkbox must be checked\n                var wrapper = field.closest('[data-bouncer-required-set]');\n                if (!wrapper) return false;\n                var checkboxes = wrapper.querySelectorAll('[type=\"checkbox\"]');\n                if (checkboxes.length > 0) {\n                    var checkedCount = 0;\n                    for (var i = 0; i < checkboxes.length; ++i) {\n                        if (checkboxes[i].checked) {\n                            checkedCount++;\n                        }\n                    }\n                    return checkedCount === 0 ? true : false;\n                }\n            }\n        };\n        // define custom messages\n        var messages = {\n            checkboxSet: 'Please choose at least one option',\n            missingValue: {\n                checkbox: 'This field is required.',\n                radio: 'Please select a value.',\n                select: 'Please select a value.',\n                'select-multiple': 'Please select at least one value.',\n                default: 'Please fill out this field.'\n            },\n            patternMismatch: {\n                email: 'Please enter a valid email address.',\n                url: 'Please enter a URL.',\n                number: 'Please enter a number',\n                color: 'Please match the following format: #rrggbb',\n                date: 'Please use the YYYY-MM-DD format',\n                time: 'Please enter a valid time value',\n                month: 'Please use the YYYY-MM format',\n                default: 'Please match the requested format.'\n            },\n            outOfRange: {\n                over: 'Please select a value that is no more than {max}.',\n                under: 'Please select a value that is no less than {min}.'\n            },\n            wrongLength: {\n                over: 'Please shorten this text to no more than {maxLength} characters. You are currently using {length} characters.',\n                under: 'Please lengthen this text to {minLength} characters or more. You are currently using {length} characters.'\n            }\n        };\n\n        // load globally defined validators, e.g. for international phone field (see https://github.com/xini/silverstripe-international-phone-number-field)\n        // example:\n        //\n        // window.bouncerValidators = window.bouncerValidators || {};\n        // window.bouncerValidators.phoneNumber = {\n        //     validator: function(field) { ... }, // return false if field is valid!\n        //     message: 'Please enter a valid phone number'\n        // };\n        var bouncerValidators = window.bouncerValidators || {};\n        for (var validatorName in bouncerValidators) {\n            if (bouncerValidators.hasOwnProperty(validatorName)) {\n                if (bouncerValidators[validatorName].hasOwnProperty('validator')) {\n                    validators[validatorName] = bouncerValidators[validatorName].validator;\n                }\n                if (bouncerValidators[validatorName].hasOwnProperty('message')) {\n                    messages[validatorName] = bouncerValidators[validatorName].message;\n                }\n            }\n        }\n\n        // load translated messages\n        var bouncerMessages = window.bouncerMessages || {};\n        messages = extend(true, messages, bouncerMessages);\n\n        // init bouncer for each form separately in order to control the settings\n        var forms = document.querySelectorAll('form:not(.js-no-validation):not(.userform)');\n        Array.prototype.forEach.call(forms, function(form, i) {\n            if (form.hasAttribute('id')) {\n                var formID = form.getAttribute('id');\n                var disableSumbit = false;\n                if (form.classList.contains('js-disable-submit')) {\n                    disableSumbit = true;\n                }\n                var bouncer = new Bouncer(\n                    '#' + formID,\n                    {\n                        fieldClass: 'error', // Applied to fields with errors\n                        errorClass: 'message error', // Applied to the error message for invalid fields\n                        customValidations: validators,\n                        messages: messages,\n                        disableSubmit: disableSumbit\n                    }\n                );\n            }\n        });\n\n        // clean up error messages\n        document.addEventListener('bouncerShowError', function (event) {\n            var field = event.target;\n            var wrapper = field.closest('.middleColumn');\n            if (typeof(wrapper) !== 'undefined' && wrapper !== null) {\n                // remove duplicated error messages, e.g. for checkbox groups\n                var messages = wrapper.querySelectorAll('.message');\n                if (messages.length > 1) {\n                    Array.prototype.forEach.call(messages, function (message, index) {\n                        if (index > 0) {\n                            message.remove();\n                        }\n                    });\n                }\n                // place message at the end of middleColumn\n                var message = wrapper.querySelector('.message');\n                if (typeof(message) !== 'undefined' && message !== null) {\n                    wrapper.appendChild(message);\n                }\n            }\n        }, false);\n\n    }\n\n    // merge json objects, see https://gomakethings.com/merging-objects-with-vanilla-javascript/\n    // var shallowMerge = extend(obj1, obj2);\n    // var deepMerge = extend(true, obj1, obj2);\n    var extend = function () {\n        // Variables\n        var extended = {};\n        var deep = false;\n        var i = 0;\n        // Check if a deep merge\n        if (typeof (arguments[0]) === 'boolean') {\n            deep = arguments[0];\n            i++;\n        }\n        // Merge the object into the extended object\n        var merge = function (obj) {\n            for (var prop in obj) {\n                if (obj.hasOwnProperty(prop)) {\n                    if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n                        // If we're doing a deep merge and the property is an object\n                        extended[prop] = extend(true, extended[prop], obj[prop]);\n                    } else {\n                        // Otherwise, do a regular merge\n                        extended[prop] = obj[prop];\n                    }\n                }\n            }\n        };\n        // Loop through each object and conduct a merge\n        for (; i < arguments.length; i++) {\n            merge(arguments[i]);\n        }\n        return extended;\n    };\n\n\n    if (document.readyState === \"loading\") {\n        // Loading hasn't finished yet\n        document.addEventListener(\"DOMContentLoaded\", initFormValidation);\n    } else {\n        // `DOMContentLoaded` has already fired\n        initFormValidation();\n    }\n\n}());\n"]}