{"version":3,"sources":["_classList.polyfill.js","_closest.polyfill.js","_customEvent.polyfill.js","_matches.polyfill.js","bouncer.js","validation-init.js"],"names":["self","document","createElement","createElementNS","view","classListProp","protoProp","elemCtrProto","Element","objCtr","Object","strTrim","String","trim","this","replace","arrIndexOf","Array","indexOf","item","i","len","length","DOMEx","type","message","name","code","DOMException","checkTokenAndGetIndex","classList","token","test","call","ClassList","elem","trimmedClasses","getAttribute","classes","split","push","_updateClassName","setAttribute","toString","classListProto","classListGetter","Error","contains","add","tokens","arguments","l","updated","remove","index","splice","toggle","force","result","method","join","defineProperty","classListPropDesc","get","enumerable","configurable","ex","number","undefined","__defineGetter__","testElement","createMethod","original","DOMTokenList","prototype","_toggle","closest","matches","msMatchesSelector","webkitMatchesSelector","s","el","ancestor","documentElement","parentElement","window","CustomEvent","event","params","bubbles","cancelable","detail","evt","createEvent","initCustomEvent","Event","root","factory","define","amd","exports","module","Bouncer","global","defaults","fieldClass","errorClass","fieldPrefix","errorPrefix","patterns","email","url","color","date","time","month","customValidations","messageAfterField","messageCustom","messageTarget","messages","missingValue","checkbox","radio","select","select-multiple","default","patternMismatch","outOfRange","over","under","wrongLength","fallback","disableSubmit","emitEvents","forEach","arr","callback","extend","merged","obj","key","hasOwnProperty","emitEvent","details","dispatchEvent","addNoValidate","selector","querySelectorAll","form","removeNoValidate","removeAttribute","field","hasAttribute","checked","value","filter","escapeCharacters","btn","settings","pattern","RegExp","match","max","min","num","parseFloat","runValidations","errors","validations","hasErrors","getErrors","valid","id","string","codeUnit","firstCodeUnit","charCodeAt","InvalidCharacterError","charAt","getFieldID","create","Math","floor","random","getErrorField","group","label","querySelector","getErrorLocation","target","location","firstChild","appendChild","createTextNode","nextSibling","parentNode","createError","error","className","fieldTarget","insertBefore","getErrorMessage","custom","addErrorAttributes","showErrorAttributes","button","showError","msg","textContent","removeAttributes","removeErrorAttributes","removeError","removeChild","removeAllErrors","Constructor","options","publicAPIs","validate","disabled","readOnly","_settings","isValid","validateAll","blurHandler","inputHandler","submitHandler","submitter","focus","preventDefault","destroy","removeEventListener","init","addEventListener","initFormValidation","validators","checkboxSet","wrapper","checkboxes","checkedCount","bouncerValidators","validatorName","validator","bouncerMessages","forms","formID","disableSumbit","bouncer","extended","deep","merge","prop","readyState"],"mappings":"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","file":"form-validation.js","sourcesContent":["/* jshint ignore:start */\n/*\n * classList.js: Cross-browser full element.classList implementation.\n * 1.1.20170427\n *\n * By Eli Grey, http://eligrey.com\n * License: Dedicated to the public domain.\n *   See https://github.com/eligrey/classList.js/blob/master/LICENSE.md\n */\n\n/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js */\n\nif (\"document\" in self) {\n\n\t// Full polyfill for browsers with no classList support\n\t// Including IE < Edge missing SVGElement.classList\n\tif (!(\"classList\" in document.createElement(\"_\"))\n\t\t|| document.createElementNS && !(\"classList\" in document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\"))) {\n\n\t\t(function (view) {\n\n\t\t\t\"use strict\";\n\n\t\t\tif (!('Element' in view)) return;\n\n\t\t\tvar\n\t\t\t\tclassListProp = \"classList\"\n\t\t\t\t, protoProp = \"prototype\"\n\t\t\t\t, elemCtrProto = view.Element[protoProp]\n\t\t\t\t, objCtr = Object\n\t\t\t\t, strTrim = String[protoProp].trim || function () {\n\t\t\t\t\treturn this.replace(/^\\s+|\\s+$/g, \"\");\n\t\t\t\t}\n\t\t\t\t, arrIndexOf = Array[protoProp].indexOf || function (item) {\n\t\t\t\t\tvar\n\t\t\t\t\t\ti = 0\n\t\t\t\t\t\t, len = this.length\n\t\t\t\t\t\t;\n\t\t\t\t\tfor (; i < len; i++) {\n\t\t\t\t\t\tif (i in this && this[i] === item) {\n\t\t\t\t\t\t\treturn i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\t// Vendors: please allow content code to instantiate DOMExceptions\n\t\t\t\t, DOMEx = function (type, message) {\n\t\t\t\t\tthis.name = type;\n\t\t\t\t\tthis.code = DOMException[type];\n\t\t\t\t\tthis.message = message;\n\t\t\t\t}\n\t\t\t\t, checkTokenAndGetIndex = function (classList, token) {\n\t\t\t\t\tif (token === \"\") {\n\t\t\t\t\t\tthrow new DOMEx(\n\t\t\t\t\t\t\t\"SYNTAX_ERR\"\n\t\t\t\t\t\t\t, \"An invalid or illegal string was specified\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (/\\s/.test(token)) {\n\t\t\t\t\t\tthrow new DOMEx(\n\t\t\t\t\t\t\t\"INVALID_CHARACTER_ERR\"\n\t\t\t\t\t\t\t, \"String contains an invalid character\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn arrIndexOf.call(classList, token);\n\t\t\t\t}\n\t\t\t\t, ClassList = function (elem) {\n\t\t\t\t\tvar\n\t\t\t\t\t\ttrimmedClasses = strTrim.call(elem.getAttribute(\"class\") || \"\")\n\t\t\t\t\t\t, classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n\t\t\t\t\t\t, i = 0\n\t\t\t\t\t\t, len = classes.length\n\t\t\t\t\t\t;\n\t\t\t\t\tfor (; i < len; i++) {\n\t\t\t\t\t\tthis.push(classes[i]);\n\t\t\t\t\t}\n\t\t\t\t\tthis._updateClassName = function () {\n\t\t\t\t\t\telem.setAttribute(\"class\", this.toString());\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t, classListProto = ClassList[protoProp] = []\n\t\t\t\t, classListGetter = function () {\n\t\t\t\t\treturn new ClassList(this);\n\t\t\t\t}\n\t\t\t\t;\n\t\t\t// Most DOMException implementations don't allow calling DOMException's toString()\n\t\t\t// on non-DOMExceptions. Error's toString() is sufficient here.\n\t\t\tDOMEx[protoProp] = Error[protoProp];\n\t\t\tclassListProto.item = function (i) {\n\t\t\t\treturn this[i] || null;\n\t\t\t};\n\t\t\tclassListProto.contains = function (token) {\n\t\t\t\ttoken += \"\";\n\t\t\t\treturn checkTokenAndGetIndex(this, token) !== -1;\n\t\t\t};\n\t\t\tclassListProto.add = function () {\n\t\t\t\tvar\n\t\t\t\t\ttokens = arguments\n\t\t\t\t\t, i = 0\n\t\t\t\t\t, l = tokens.length\n\t\t\t\t\t, token\n\t\t\t\t\t, updated = false\n\t\t\t\t\t;\n\t\t\t\tdo {\n\t\t\t\t\ttoken = tokens[i] + \"\";\n\t\t\t\t\tif (checkTokenAndGetIndex(this, token) === -1) {\n\t\t\t\t\t\tthis.push(token);\n\t\t\t\t\t\tupdated = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (++i < l);\n\n\t\t\t\tif (updated) {\n\t\t\t\t\tthis._updateClassName();\n\t\t\t\t}\n\t\t\t};\n\t\t\tclassListProto.remove = function () {\n\t\t\t\tvar\n\t\t\t\t\ttokens = arguments\n\t\t\t\t\t, i = 0\n\t\t\t\t\t, l = tokens.length\n\t\t\t\t\t, token\n\t\t\t\t\t, updated = false\n\t\t\t\t\t, index\n\t\t\t\t\t;\n\t\t\t\tdo {\n\t\t\t\t\ttoken = tokens[i] + \"\";\n\t\t\t\t\tindex = checkTokenAndGetIndex(this, token);\n\t\t\t\t\twhile (index !== -1) {\n\t\t\t\t\t\tthis.splice(index, 1);\n\t\t\t\t\t\tupdated = true;\n\t\t\t\t\t\tindex = checkTokenAndGetIndex(this, token);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (++i < l);\n\n\t\t\t\tif (updated) {\n\t\t\t\t\tthis._updateClassName();\n\t\t\t\t}\n\t\t\t};\n\t\t\tclassListProto.toggle = function (token, force) {\n\t\t\t\ttoken += \"\";\n\n\t\t\t\tvar\n\t\t\t\t\tresult = this.contains(token)\n\t\t\t\t\t, method = result ?\n\t\t\t\t\t\tforce !== true && \"remove\"\n\t\t\t\t\t\t:\n\t\t\t\t\t\tforce !== false && \"add\"\n\t\t\t\t\t;\n\n\t\t\t\tif (method) {\n\t\t\t\t\tthis[method](token);\n\t\t\t\t}\n\n\t\t\t\tif (force === true || force === false) {\n\t\t\t\t\treturn force;\n\t\t\t\t} else {\n\t\t\t\t\treturn !result;\n\t\t\t\t}\n\t\t\t};\n\t\t\tclassListProto.toString = function () {\n\t\t\t\treturn this.join(\" \");\n\t\t\t};\n\n\t\t\tif (objCtr.defineProperty) {\n\t\t\t\tvar classListPropDesc = {\n\t\t\t\t\tget: classListGetter\n\t\t\t\t\t, enumerable: true\n\t\t\t\t\t, configurable: true\n\t\t\t\t};\n\t\t\t\ttry {\n\t\t\t\t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t\t\t\t} catch (ex) { // IE 8 doesn't support enumerable:true\n\t\t\t\t\t// adding undefined to fight this issue https://github.com/eligrey/classList.js/issues/36\n\t\t\t\t\t// modernie IE8-MSW7 machine has IE8 8.0.6001.18702 and is affected\n\t\t\t\t\tif (ex.number === undefined || ex.number === -0x7FF5EC54) {\n\t\t\t\t\t\tclassListPropDesc.enumerable = false;\n\t\t\t\t\t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (objCtr[protoProp].__defineGetter__) {\n\t\t\t\telemCtrProto.__defineGetter__(classListProp, classListGetter);\n\t\t\t}\n\n\t\t}(self));\n\n\t}\n\n\t// There is full or partial native classList support, so just check if we need\n\t// to normalize the add/remove and toggle APIs.\n\n\t(function () {\n\t\t\"use strict\";\n\n\t\tvar testElement = document.createElement(\"_\");\n\n\t\ttestElement.classList.add(\"c1\", \"c2\");\n\n\t\t// Polyfill for IE 10/11 and Firefox <26, where classList.add and\n\t\t// classList.remove exist but support only one argument at a time.\n\t\tif (!testElement.classList.contains(\"c2\")) {\n\t\t\tvar createMethod = function (method) {\n\t\t\t\tvar original = DOMTokenList.prototype[method];\n\n\t\t\t\tDOMTokenList.prototype[method] = function (token) {\n\t\t\t\t\tvar i, len = arguments.length;\n\n\t\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\t\ttoken = arguments[i];\n\t\t\t\t\t\toriginal.call(this, token);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t\tcreateMethod('add');\n\t\t\tcreateMethod('remove');\n\t\t}\n\n\t\ttestElement.classList.toggle(\"c3\", false);\n\n\t\t// Polyfill for IE 10 and Firefox <24, where classList.toggle does not\n\t\t// support the second argument.\n\t\tif (testElement.classList.contains(\"c3\")) {\n\t\t\tvar _toggle = DOMTokenList.prototype.toggle;\n\n\t\t\tDOMTokenList.prototype.toggle = function (token, force) {\n\t\t\t\tif (1 in arguments && !this.contains(token) === !force) {\n\t\t\t\t\treturn force;\n\t\t\t\t} else {\n\t\t\t\t\treturn _toggle.call(this, token);\n\t\t\t\t}\n\t\t\t};\n\n\t\t}\n\n\t\ttestElement = null;\n\t}());\n\n}\n/* jshint ignore:end */","/**\n * Element.closest() polyfill\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\n */\nif (!Element.prototype.closest) {\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\tElement.prototype.closest = function (s) {\n\t\tvar el = this;\n\t\tvar ancestor = this;\n\t\tif (!document.documentElement.contains(el)) return null;\n\t\tdo {\n\t\t\tif (ancestor.matches(s)) return ancestor;\n\t\t\tancestor = ancestor.parentElement;\n\t\t} while (ancestor !== null);\n\t\treturn null;\n\t};\n}","/**\n * CustomEvent() polyfill\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill\n */\n(function () {\n\n\tif (typeof window.CustomEvent === \"function\") return false;\n\n\tfunction CustomEvent(event, params) {\n\t\tparams = params || { bubbles: false, cancelable: false, detail: undefined };\n\t\tvar evt = document.createEvent('CustomEvent');\n\t\tevt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n\t\treturn evt;\n\t}\n\n\tCustomEvent.prototype = window.Event.prototype;\n\n\twindow.CustomEvent = CustomEvent;\n})();","/**\n * Element.matches() polyfill (simple version)\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n */\nif (!Element.prototype.matches) {\n\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n}","(function (root, factory) {\n\tif ( typeof define === 'function' && define.amd ) {\n\t\tdefine([], function () {\n\t\t\treturn factory(root);\n\t\t});\n\t} else if ( typeof exports === 'object' ) {\n\t\tmodule.exports = factory(root);\n\t} else {\n\t\troot.Bouncer = factory(root);\n\t}\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n\n\t'use strict';\n\n\t//\n\t// Variables\n\t//\n\n\tvar defaults = {\n\n\t\t// Classes & IDs\n\n\t\tfieldClass: 'error',\n\t\terrorClass: 'error-message',\n\t\tfieldPrefix: 'bouncer-field_',\n\t\terrorPrefix: 'bouncer-error_',\n\n\t\t// Patterns\n\t\tpatterns: {\n\t\t\temail: /^([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22))*\\x40([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d))*(\\.\\w{2,})+$/,\n\t\t\turl: /^(?:(?:https?|HTTPS?|ftp|FTP):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-zA-Z\\u00a1-\\uffff0-9]-*)*[a-zA-Z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-zA-Z\\u00a1-\\uffff0-9]-*)*[a-zA-Z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-zA-Z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/,\n\t\t\tnumber: /^(?:[-+]?[0-9]*[.,]?[0-9]+)$/,\n\t\t\tcolor: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/,\n\t\t\tdate: /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))/,\n\t\t\ttime: /^(?:(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]))$/,\n\t\t\tmonth: /^(?:(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])))$/\n\t\t},\n\n\t\t// Custom Validations\n\t\tcustomValidations: {},\n\n\t\t// Messages\n\t\tmessageAfterField: true,\n\t\tmessageCustom: 'data-bouncer-message',\n\t\tmessageTarget: 'data-bouncer-target',\n\t\tmessages: {\n\t\t\tmissingValue: {\n\t\t\t\tcheckbox: 'This field is required.',\n\t\t\t\tradio: 'Please select a value.',\n\t\t\t\tselect: 'Please select a value.',\n\t\t\t\t'select-multiple': 'Please select at least one value.',\n\t\t\t\tdefault: 'Please fill out this field.'\n\t\t\t},\n\t\t\tpatternMismatch: {\n\t\t\t\temail: 'Please enter a valid email address.',\n\t\t\t\turl: 'Please enter a URL.',\n\t\t\t\tnumber: 'Please enter a number',\n\t\t\t\tcolor: 'Please match the following format: #rrggbb',\n\t\t\t\tdate: 'Please use the YYYY-MM-DD format',\n\t\t\t\ttime: 'Please use the 24-hour time format. Ex. 23:00',\n\t\t\t\tmonth: 'Please use the YYYY-MM format',\n\t\t\t\tdefault: 'Please match the requested format.'\n\t\t\t},\n\t\t\toutOfRange: {\n\t\t\t\tover: 'Please select a value that is no more than {max}.',\n\t\t\t\tunder: 'Please select a value that is no less than {min}.'\n\t\t\t},\n\t\t\twrongLength: {\n\t\t\t\tover: 'Please shorten this text to no more than {maxLength} characters. You are currently using {length} characters.',\n\t\t\t\tunder: 'Please lengthen this text to {minLength} characters or more. You are currently using {length} characters.'\n\t\t\t},\n\t\t\tfallback: 'There was an error with this field.'\n\t\t},\n\n\t\t// Form Submission\n\t\tdisableSubmit: false,\n\n\t\t// Custom Events\n\t\temitEvents: true\n\n\t};\n\n\n\t//\n\t// Methods\n\t//\n\n\t/**\n\t * A wrapper for Array.prototype.forEach() for non-arrays\n\t * @param  {Array-like} arr      The array-like object\n\t * @param  {Function}   callback The callback to run\n\t */\n\tvar forEach = function (arr, callback) {\n\t\tArray.prototype.forEach.call(arr, callback);\n\t};\n\n\t/**\n\t * Merge two or more objects together.\n\t * @param   {Object}   objects  The objects to merge together\n\t * @returns {Object}            Merged values of defaults and options\n\t */\n\tvar extend = function () {\n\t\tvar merged = {};\n\t\tforEach(arguments, function (obj) {\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (!obj.hasOwnProperty(key)) return;\n\t\t\t\tif (Object.prototype.toString.call(obj[key]) === '[object Object]') {\n\t\t\t\t\tmerged[key] = extend(merged[key], obj[key]);\n\t\t\t\t} else {\n\t\t\t\t\tmerged[key] = obj[key];\n\t\t\t\t}\n\t\t\t\t// merged[key] = obj[key];\n\t\t\t}\n\t\t});\n\t\treturn merged;\n\t};\n\n\t/**\n\t * Emit a custom event\n\t * @param  {String} type    The event type\n\t * @param  {Object} options The settings object\n\t * @param  {Node}   anchor  The anchor element\n\t * @param  {Node}   toggle  The toggle element\n\t */\n\tvar emitEvent = function (elem, type, details) {\n\t\tif (typeof window.CustomEvent !== 'function') return;\n\t\tvar event = new CustomEvent(type, {\n\t\t\tbubbles: true,\n\t\t\tdetail: details || {}\n\t\t});\n\t\telem.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Add the `novalidate` attribute to all forms\n\t * @param {Boolean} remove  If true, remove the `novalidate` attribute\n\t */\n\tvar addNoValidate = function (selector) {\n\t\tforEach(document.querySelectorAll(selector), function (form) {\n\t\t\tform.setAttribute('novalidate', true);\n\t\t});\n\t};\n\n\t/**\n\t * Remove the `novalidate` attribute to all forms\n\t */\n\tvar removeNoValidate = function (selector) {\n\t\tforEach(document.querySelectorAll(selector), function (form) {\n\t\t\tform.removeAttribute('novalidate');\n\t\t});\n\t};\n\n\t/**\n\t * Check if a required field is missing its value\n\t * @param  {Node} field The field to check\n\t * @return {Boolean}       It true, field is missing it's value\n\t */\n\tvar missingValue = function (field) {\n\n\t\t// If not required, bail\n\t\tif (!field.hasAttribute('required')) return false;\n\n\t\t// Handle checkboxes\n\t\tif (field.type === 'checkbox') {\n\t\t\treturn !field.checked;\n\t\t}\n\n\t\t// Get the field value length\n\t\tvar length = field.value.length;\n\n\t\t// Handle radio buttons\n\t\tif (field.type === 'radio') {\n\t\t\tlength = Array.prototype.filter.call(field.form.querySelectorAll('[name=\"' + escapeCharacters(field.name) + '\"]'), function (btn) {\n\t\t\t\treturn btn.checked;\n\t\t\t}).length;\n\t\t}\n\n\t\t// Check for value\n\t\treturn length < 1;\n\n\t};\n\n\t/**\n\t * Check if field value doesn't match a patter.\n\t * @param  {Node}   field    The field to check\n\t * @param  {Object} settings The plugin settings\n\t * @see https://www.w3.org/TR/html51/sec-forms.html#the-pattern-attribute\n\t * @return {Boolean}         If true, there's a pattern mismatch\n\t */\n\tvar patternMismatch = function (field, settings) {\n\n\t\t// Check if there's a pattern to match\n\t\tvar pattern = field.getAttribute('pattern');\n\t\tpattern = pattern ? new RegExp('^(?:' + pattern + ')$') : settings.patterns[field.type];\n\t\tif (!pattern || !field.value || field.value.length < 1) return false;\n\n\t\t// Validate the pattern\n\t\treturn field.value.match(pattern) ? false : true;\n\n\t};\n\n\t/**\n\t * Check if field value is out-of-range\n\t * @param  {Node}    field    The field to check\n\t * @return {String}           Returns 'over', 'under', or false\n\t */\n\tvar outOfRange = function (field) {\n\n\t\t// Make sure field has value\n\t\tif (!field.value || field.value.length < 1) return false;\n\n\t\t// Check for range\n\t\tvar max = field.getAttribute('max');\n\t\tvar min = field.getAttribute('min');\n\n\t\t// Check validity\n\t\tvar num = parseFloat(field.value);\n\t\tif (max && num > max) return 'over';\n\t\tif (min && num < min) return 'under';\n\t\treturn false;\n\n\t};\n\n\t/**\n\t * Check if the field value is too long or too short\n\t * @param  {Node}   field    The field to check\n\t * @return {String}           Returns 'over', 'under', or false\n\t */\n\tvar wrongLength = function (field) {\n\n\t\t// Make sure field has value\n\t\tif (!field.value || field.value.length < 1) return false;\n\n\t\t// Check for min/max length\n\t\tvar max = field.getAttribute('maxlength');\n\t\tvar min = field.getAttribute('minlength');\n\n\t\t// Check validity\n\t\tvar length = field.value.length;\n\t\tif (max && length > max) return 'over';\n\t\tif (min && length < min) return 'under';\n\t\treturn false;\n\n\t};\n\n\t/**\n\t * Test for standard field validations\n\t * @param  {Node}   field    The field to test\n\t * @param  {Object} settings The plugin settings\n\t * @return {Object}          The tests and their results\n\t */\n\tvar runValidations = function (field, settings) {\n\t\treturn {\n\t\t\tmissingValue: missingValue(field),\n\t\t\tpatternMismatch: patternMismatch(field, settings),\n\t\t\toutOfRange: outOfRange(field),\n\t\t\twrongLength: wrongLength(field)\n\t\t};\n\t};\n\n\t/**\n\t * Run any provided custom validations\n\t * @param  {Node}   field       The field to test\n\t * @param  {Object} errors      The existing errors\n\t * @param  {Object} validations The custom validations to run\n\t * @param  {Object} settings    The plugin settings\n\t * @return {Object}             The tests and their results\n\t */\n\tvar customValidations = function (field, errors, validations, settings) {\n\t\tfor (var test in validations) {\n\t\t\tif (validations.hasOwnProperty(test)) {\n\t\t\t\terrors[test] = validations[test](field, settings);\n\t\t\t}\n\t\t}\n\t\treturn errors;\n\t};\n\n\t/**\n\t * Check if a field has any errors\n\t * @param  {Object}  errors The validation test results\n\t * @return {Boolean}        Returns true if there are errors\n\t */\n\tvar hasErrors = function (errors) {\n\t\tfor (var type in errors) {\n\t\t\tif (errors[type]) return true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Check a field for errors\n\t * @param  {Node} field      The field to test\n\t * @param  {Object} settings The plugin settings\n\t * @return {Object}          The field validity and errors\n\t */\n\tvar getErrors = function (field, settings) {\n\n\t\t// Get standard validation errors\n\t\tvar errors = runValidations(field,settings);\n\n\t\t// Check for custom validations\n\t\terrors = customValidations(field, errors, settings.customValidations, settings);\n\n\t\treturn {\n\t\t\tvalid: !hasErrors(errors),\n\t\t\terrors: errors\n\t\t};\n\n\t};\n\n\t/**\n\t * Escape special characters for use with querySelector\n\t * @author Mathias Bynens\n\t * @link https://github.com/mathiasbynens/CSS.escape\n\t * @param {String} id The anchor ID to escape\n\t */\n\tvar escapeCharacters = function (id) {\n\n\t\tvar string = String(id);\n\t\tvar length = string.length;\n\t\tvar index = -1;\n\t\tvar codeUnit;\n\t\tvar result = '';\n\t\tvar firstCodeUnit = string.charCodeAt(0);\n\t\twhile (++index < length) {\n\t\t\tcodeUnit = string.charCodeAt(index);\n\t\t\t// Note: there’s no need to special-case astral symbols, surrogate\n\t\t\t// pairs, or lone surrogates.\n\n\t\t\t// If the character is NULL (U+0000), then throw an\n\t\t\t// `InvalidCharacterError` exception and terminate these steps.\n\t\t\tif (codeUnit === 0x0000) {\n\t\t\t\tthrow new InvalidCharacterError(\n\t\t\t\t\t'Invalid character: the input contains U+0000.'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t// If the character is in the range [\\1-\\1F] (U+0001 to U+001F) or is\n\t\t\t\t// U+007F, […]\n\t\t\t\t(codeUnit >= 0x0001 && codeUnit <= 0x001F) || codeUnit == 0x007F ||\n\t\t\t\t// If the character is the first character and is in the range [0-9]\n\t\t\t\t// (U+0030 to U+0039), […]\n\t\t\t\t(index === 0 && codeUnit >= 0x0030 && codeUnit <= 0x0039) ||\n\t\t\t\t// If the character is the second character and is in the range [0-9]\n\t\t\t\t// (U+0030 to U+0039) and the first character is a `-` (U+002D), […]\n\t\t\t\t(\n\t\t\t\t\tindex === 1 &&\n\t\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 &&\n\t\t\t\t\tfirstCodeUnit === 0x002D\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// http://dev.w3.org/csswg/cssom/#escape-a-character-as-code-point\n\t\t\t\tresult += '\\\\' + codeUnit.toString(16) + ' ';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If the character is not handled by one of the above rules and is\n\t\t\t// greater than or equal to U+0080, is `-` (U+002D) or `_` (U+005F), or\n\t\t\t// is in one of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to\n\t\t\t// U+005A), or [a-z] (U+0061 to U+007A), […]\n\t\t\tif (\n\t\t\t\tcodeUnit >= 0x0080 ||\n\t\t\t\tcodeUnit === 0x002D ||\n\t\t\t\tcodeUnit === 0x005F ||\n\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 ||\n\t\t\t\tcodeUnit >= 0x0041 && codeUnit <= 0x005A ||\n\t\t\t\tcodeUnit >= 0x0061 && codeUnit <= 0x007A\n\t\t\t) {\n\t\t\t\t// the character itself\n\t\t\t\tresult += string.charAt(index);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Otherwise, the escaped character.\n\t\t\t// http://dev.w3.org/csswg/cssom/#escape-a-character\n\t\t\tresult += '\\\\' + string.charAt(index);\n\n\t\t}\n\n\t\t// Return sanitized hash\n\t\treturn result;\n\n\t};\n\n\t/**\n\t * Get or create an ID for a field\n\t * @param  {Node}    field    The field\n\t * @param  {Object}  settings The plugin settings\n\t * @param  {Boolean} create   If true, create an ID if there isn't one\n\t * @return {String}           The field ID\n\t */\n\tvar getFieldID = function (field, settings, create) {\n\t\tvar id = field.name ? field.name : field.id;\n\t\tif (!id && create) {\n\t\t\tid = settings.fieldPrefix + Math.floor(Math.random() * 999);\n\t\t\tfield.id = id;\n\t\t}\n\t\tif (field.type === 'checkbox') {\n\t\t\tid += '_' + (field.value || field.id);\n\t\t}\n\t\treturn id;\n\t};\n\n\t/**\n\t * Special handling for radio buttons and checkboxes wrapped in labels.\n\t * @param  {Node} field The field with the error\n\t * @return {Node}       The field to show the error on\n\t */\n\tvar getErrorField = function (field) {\n\n\t\t// If the field is a radio button, get the last item in the radio group\n\t\t// @todo if location is before, get first item\n\t\tif (field.type === 'radio' && field.name) {\n\t\t\tvar group = field.form.querySelectorAll('[name=\"' + escapeCharacters(field.name) + '\"]');\n\t\t\tfield = group[group.length - 1];\n\t\t}\n\n\t\t// Get the associated label for radio button or checkbox\n\t\tif (field.type === 'radio' || field.type === 'checkbox') {\n\t\t\tvar label = field.closest('label') || field.form.querySelector('[for=\"' + field.id + '\"]');\n\t\t\tfield = label || field;\n\t\t}\n\n\t\treturn field;\n\n\t};\n\n\t/**\n\t * Get the location for a field's error message\n\t * @param  {Node}   field    The field\n\t * @param  {Node}   target   The target for error message\n\t * @param  {Object} settings The plugin settings\n\t * @return {Node}            The error location\n\t */\n\tvar getErrorLocation = function (field, target, settings) {\n\n\t\t// Check for a custom error message\n\t\tvar selector = field.getAttribute(settings.messageTarget);\n\t\tif (selector) {\n\t\t\tvar location = field.form.querySelector(selector);\n\t\t\tif (location) {\n\t\t\t\t// @bugfix by @HaroldPutman\n\t\t\t\t// https://github.com/cferdinandi/bouncer/pull/28\n\t\t\t\treturn location.firstChild || location.appendChild(document.createTextNode(''));\n\t\t\t}\n\t\t}\n\n\t\t// If the message should come after the field\n\t\tif (settings.messageAfterField) {\n\n\t\t\t// If there's no next sibling, create one\n\t\t\tif (!target.nextSibling) {\n\t\t\t\ttarget.parentNode.appendChild(document.createTextNode(''));\n\t\t\t}\n\n\t\t\treturn target.nextSibling;\n\n\t\t}\n\n\t\t// If it should come before\n\t\treturn target;\n\n\t};\n\n\t/**\n\t * Create a validation error message node\n\t * @param  {Node} field      The field\n\t * @param  {Object} settings The plugin settings\n\t * @return {Node}            The error message node\n\t */\n\tvar createError = function (field, settings) {\n\n\t\t// Create the error message\n\t\tvar error = document.createElement('div');\n\t\terror.className = settings.errorClass;\n\t\terror.id = settings.errorPrefix + getFieldID(field, settings, true);\n\n\t\t// If the field is a radio button or checkbox, grab the last field label\n\t\tvar fieldTarget = getErrorField(field);\n\n\t\t// Inject the error message into the DOM\n\t\tvar location = getErrorLocation(field, fieldTarget, settings);\n\t\tlocation.parentNode.insertBefore(error, location);\n\n\t\treturn error;\n\n\t};\n\n\t/**\n\t * Get the error message test\n\t * @param  {Node}            field    The field to get an error message for\n\t * @param  {Object}          errors   The errors on the field\n\t * @param  {Object}          settings The plugin settings\n\t * @return {String|Function}          The error message\n\t */\n\tvar getErrorMessage = function (field, errors, settings) {\n\n\t\t// Variables\n\t\tvar messages = settings.messages;\n\n\t\t// Missing value error\n\t\tif (errors.missingValue) {\n\t\t\treturn messages.missingValue[field.type] || messages.missingValue.default;\n\t\t}\n\n\t\t// Numbers that are out of range\n\t\tif (errors.outOfRange) {\n\t\t\treturn messages.outOfRange[errors.outOfRange].replace('{max}', field.getAttribute('max')).replace('{min}', field.getAttribute('min')).replace('{length}', field.value.length);\n\t\t}\n\n\t\t// Values that are too long or short\n\t\tif (errors.wrongLength) {\n\t\t\treturn messages.wrongLength[errors.wrongLength].replace('{maxLength}', field.getAttribute('maxlength')).replace('{minLength}', field.getAttribute('minlength')).replace('{length}', field.value.length);\n\t\t}\n\n\t\t// Pattern mismatch error\n\t\tif (errors.patternMismatch) {\n\t\t\tvar custom = field.getAttribute(settings.messageCustom);\n\t\t\tif (custom) return custom;\n\t\t\treturn messages.patternMismatch[field.type] || messages.patternMismatch.default;\n\t\t}\n\n\t\t// Custom validations\n\t\tfor (var test in settings.customValidations) {\n\t\t\tif (settings.customValidations.hasOwnProperty(test)) {\n\t\t\t\tif (errors[test] && messages[test]) return messages[test];\n\t\t\t}\n\t\t}\n\n\t\t// Fallback error message\n\t\treturn messages.fallback;\n\n\t};\n\n\t/**\n\t * Add error attributes to a field\n\t * @param  {Node}   field    The field with the error message\n\t * @param  {Node}   error    The error message\n\t * @param  {Object} settings The plugin settings\n\t */\n\tvar addErrorAttributes = function (field, error, settings) {\n\t\tfield.classList.add(settings.fieldClass);\n\t\tfield.setAttribute('aria-describedby', error.id);\n\t\tfield.setAttribute('aria-invalid', true);\n\t};\n\n\t/**\n\t * Show error attributes on a field or radio/checkbox group\n\t * @param  {Node}   field    The field with the error message\n\t * @param  {Node}   error    The error message\n\t * @param  {Object} settings The plugin settings\n\t */\n\tvar showErrorAttributes = function (field, error, settings) {\n\n\t\t// If field is a radio button, add attributes to every button in the group\n\t\tif (field.type === 'radio' && field.name) {\n\t\t\tArray.prototype.forEach.call(document.querySelectorAll('[name=\"' + field.name + '\"]'), function (button) {\n\t\t\t\taddErrorAttributes(button, error, settings);\n\t\t\t});\n\t\t}\n\n\t\t// Otherwise, add an error class and aria attribute to the field\n\t\taddErrorAttributes(field, error, settings);\n\n\t};\n\n\t/**\n\t * Show an error message in the DOM\n\t * @param  {Node} field      The field to show an error message for\n\t * @param  {Object}          errors   The errors on the field\n\t * @param  {Object}          settings The plugin settings\n\t */\n\tvar showError = function (field, errors, settings) {\n\n\t\t// Get/create an error message\n\t\tvar error = field.form.querySelector('#' + escapeCharacters(settings.errorPrefix + getFieldID(field, settings))) || createError(field, settings);\n\t\tvar msg = getErrorMessage(field, errors, settings);\n\t\terror.textContent = typeof msg === 'function' ? msg(field, settings) : msg;\n\n\t\t// Add error attributes\n\t\tshowErrorAttributes(field, error, settings);\n\n\t\t// Emit custom event\n\t\tif (settings.emitEvents) {\n\t\t\temitEvent(field, 'bouncerShowError', {\n\t\t\t\terrors: errors\n\t\t\t});\n\t\t}\n\n\t};\n\n\t/**\n\t * Remove error attributes from a field\n\t * @param  {Node}   field    The field with the error message\n\t * @param  {Node}   error    The error message\n\t * @param  {Object} settings The plugin settings\n\t */\n\tvar removeAttributes = function (field, settings) {\n\t\tfield.classList.remove(settings.fieldClass);\n\t\tfield.removeAttribute('aria-describedby');\n\t\tfield.removeAttribute('aria-invalid');\n\t};\n\n\t/**\n\t * Remove error attributes from the field or radio group\n\t * @param  {Node}   field    The field with the error message\n\t * @param  {Node}   error    The error message\n\t * @param  {Object} settings The plugin settings\n\t */\n\tvar removeErrorAttributes = function (field, settings) {\n\n\t\t// If field is a radio button, remove attributes from every button in the group\n\t\tif (field.type === 'radio' && field.name) {\n\t\t\tArray.prototype.forEach.call(document.querySelectorAll('[name=\"' + field.name + '\"]'), function (button) {\n\t\t\t\tremoveAttributes(button, settings);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\t// Otherwise, add an error class and aria attribute to the field\n\t\tremoveAttributes(field, settings);\n\n\t};\n\n\t/**\n\t * Remove an error message from the DOM\n\t * @param  {Node} field      The field with the error message\n\t * @param  {Object} settings The plugin settings\n\t */\n\tvar removeError = function (field, settings) {\n\n\t\t// Get the error message for this field\n\t\tvar error = field.form.querySelector('#' + escapeCharacters(settings.errorPrefix + getFieldID(field, settings)));\n\t\tif (!error) return;\n\n\t\t// Remove the error\n\t\terror.parentNode.removeChild(error);\n\n\t\t// Remove error and a11y from the field\n\t\tremoveErrorAttributes(field, settings);\n\n\t\t// Emit custom event\n\t\tif (settings.emitEvents) {\n\t\t\temitEvent(field, 'bouncerRemoveError');\n\t\t}\n\n\t};\n\n\t/**\n\t * Remove errors from all fields\n\t * @param  {String} selector The selector for the form\n\t * @param  {Object} settings The plugin settings\n\t */\n\tvar removeAllErrors = function (selector, settings) {\n\t\tforEach(document.querySelectorAll(selector), function (form) {\n\t\t\tforEach(form.querySelectorAll('input, select, textarea'), function (field) {\n\t\t\t\tremoveError(field, settings);\n\t\t\t});\n\t\t});\n\t};\n\n\t/**\n\t * The plugin constructor\n\t * @param {String} selector The selector to use for forms to be validated\n\t * @param {Object} options  User settings [optional]\n\t */\n\tvar Constructor = function (selector, options) {\n\n\t\t//\n\t\t// Variables\n\t\t//\n\n\t\tvar publicAPIs = {};\n\t\tvar settings;\n\n\n\t\t//\n\t\t// Methods\n\t\t//\n\n\t\t/**\n\t\t * Validate a field\n\t\t * @param  {Node} field     The field to validate\n\t\t * @param  {Object} options Validation options\n\t\t * @return {Object}         The validity state and errors\n\t\t */\n\t\tpublicAPIs.validate = function (field, options) {\n\n\t\t\t// Don't validate submits, buttons, file and reset inputs, and disabled and readonly fields\n\t\t\tif (field.disabled || field.readOnly || field.type === 'reset' || field.type === 'submit' || field.type === 'button') return;\n\n\t\t\t// Local settings\n\t\t\tvar _settings = extend(settings, options || {});\n\n\t\t\t// Check for errors\n\t\t\tvar isValid = getErrors(field, _settings);\n\n\t\t\t// If valid, remove any error messages\n\t\t\tif (isValid.valid) {\n\t\t\t\tremoveError(field, _settings);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, show an error message\n\t\t\tshowError(field, isValid.errors, _settings);\n\n\t\t\treturn isValid;\n\n\t\t};\n\n\t\t/**\n\t\t * Validate all fields in a form or section\n\t\t * @param  {Node} target The form or section to validate fields in\n\t\t * @return {Array}       An array of fields with errors\n\t\t */\n\t\tpublicAPIs.validateAll = function (target) {\n\t\t\treturn Array.prototype.filter.call(target.querySelectorAll('input, select, textarea'), function (field) {\n\t\t\t\tvar validate = publicAPIs.validate(field);\n\t\t\t\treturn validate && !validate.valid;\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Run a validation on field blur\n\t\t */\n\t\tvar blurHandler = function (event) {\n\n\t\t\t// Only run if the field is in a form to be validated\n\t\t\tif (!event.target.form || !event.target.form.matches(selector)) return;\n\n\t\t\t// Validate the field\n\t\t\tpublicAPIs.validate(event.target);\n\n\t\t};\n\n\t\t/**\n\t\t * Run a validation on a fields with errors when the value changes\n\t\t */\n\t\tvar inputHandler = function (event) {\n\n\t\t\t// Only run if the field is in a form to be validated\n\t\t\tif (!event.target.form || !event.target.form.matches(selector)) return;\n\n\t\t\t// Only run on fields with errors\n\t\t\tif (!event.target.classList.contains(settings.fieldClass)) return;\n\n\t\t\t// Validate the field\n\t\t\tpublicAPIs.validate(event.target);\n\n\t\t};\n\n\t\t/**\n\t\t * Validate an entire form when it's submitted\n\t\t */\n\t\tvar submitHandler = function (event) {\n\n\t\t\t// Only run on matching elements\n\t\t\tif (!event.target.matches(selector)) return;\n\n            // skip validation if button with class .skip-validation is clicked\n            if (event.submitter && event.submitter.classList.contains('skip-validation')) return;\n\n\t\t\t// Validate each field\n\t\t\tvar errors = publicAPIs.validateAll(event.target);\n\n\t\t\t// If there are errors, focus on the first one\n\t\t\tif (errors.length > 0) {\n\t\t\t\terrors[0].focus();\n\t\t\t\temitEvent(event.target, 'bouncerFormInvalid', {errors: errors});\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Emit custom event\n\t\t\tif (settings.emitEvents) {\n\t\t\t\temitEvent(event.target, 'bouncerFormValid');\n\t\t\t}\n\n\t\t\t// Prevent form submission if disabled\n\t\t\tif (settings.disableSubmit) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t};\n\n\t\t/**\n\t\t * Destroy the current plugin instantiation\n\t\t */\n\t\tpublicAPIs.destroy = function () {\n\n\t\t\t// Remove event listeners\n\t\t\tdocument.removeEventListener('blur', blurHandler, true);\n\t\t\tdocument.removeEventListener('input', inputHandler, false);\n\t\t\tdocument.removeEventListener('click', inputHandler, false);\n\t\t\tdocument.removeEventListener('submit', submitHandler, false);\n\n\t\t\t// Remove all errors\n\t\t\tremoveAllErrors(selector, settings);\n\n\t\t\t// Remove novalidate attribute\n\t\t\tremoveNoValidate(selector);\n\n\t\t\t// Emit custom event\n\t\t\tif (settings.emitEvents) {\n\t\t\t\temitEvent(document, 'bouncerDestroyed', {\n\t\t\t\t\tsettings: settings\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Reset settings\n\t\t\tsettings = null;\n\n\t\t};\n\n\t\t/**\n\t\t * Instantiate a new instance of the plugin\n\t\t */\n\t\tvar init = function () {\n\n\t\t\t// Create settings\n\t\t\tsettings = extend(defaults, options || {});\n\n\t\t\t// Add novalidate attribute\n\t\t\taddNoValidate(selector);\n\n\t\t\t// Event Listeners\n\t\t\tdocument.addEventListener('blur', blurHandler, true);\n\t\t\tdocument.addEventListener('input', inputHandler, false);\n\t\t\tdocument.addEventListener('click', inputHandler, false);\n\t\t\tdocument.addEventListener('submit', submitHandler, false);\n\n\t\t\t// Emit custom event\n\t\t\tif (settings.emitEvents) {\n\t\t\t\temitEvent(document, 'bouncerInitialized', {\n\t\t\t\t\tsettings: settings\n\t\t\t\t});\n\t\t\t}\n\n\t\t};\n\n\t\t//\n\t\t// Inits & Event Listeners\n\t\t//\n\n\t\tinit();\n\t\treturn publicAPIs;\n\n\t};\n\n\n\t//\n\t// Return the constructor\n\t//\n\n\treturn Constructor;\n\n});\n",";(function () {\n    'use strict';\n\n    function initFormValidation() {\n        // define custom validations\n        var validators = {\n            // custom validator for checkbox groups\n            // currently not working, see https://github.com/cferdinandi/bouncer/issues/40\n            // and https://github.com/cferdinandi/bouncer/issues/47\n            checkboxSet: function(field) {\n                // where at least one checkbox must be checked\n                var wrapper = field.closest('[data-bouncer-required-set]');\n                if (!wrapper) return false;\n                var checkboxes = wrapper.querySelectorAll('[type=\"checkbox\"]');\n                if (checkboxes.length > 0) {\n                    var checkedCount = 0;\n                    for (var i = 0; i < checkboxes.length; ++i) {\n                        if (checkboxes[i].checked) {\n                            checkedCount++;\n                        }\n                    }\n                    return checkedCount === 0 ? true : false;\n                }\n            }\n        };\n        // define custom messages\n        var messages = {\n            checkboxSet: 'Please choose at least one option',\n            missingValue: {\n                checkbox: 'This field is required.',\n                radio: 'Please select a value.',\n                select: 'Please select a value.',\n                'select-multiple': 'Please select at least one value.',\n                default: 'Please fill out this field.'\n            },\n            patternMismatch: {\n                email: 'Please enter a valid email address.',\n                url: 'Please enter a URL.',\n                number: 'Please enter a number',\n                color: 'Please match the following format: #rrggbb',\n                date: 'Please use the YYYY-MM-DD format',\n                time: 'Please use the 24-hour time format. Ex. 23:00',\n                month: 'Please use the YYYY-MM format',\n                default: 'Please match the requested format.'\n            },\n            outOfRange: {\n                over: 'Please select a value that is no more than {max}.',\n                under: 'Please select a value that is no less than {min}.'\n            },\n            wrongLength: {\n                over: 'Please shorten this text to no more than {maxLength} characters. You are currently using {length} characters.',\n                under: 'Please lengthen this text to {minLength} characters or more. You are currently using {length} characters.'\n            }\n        };\n\n        // load globally defined validators, e.g. for international phone field (see https://github.com/xini/silverstripe-international-phone-number-field)\n        // example:\n        //\n        // window.bouncerValidators = window.bouncerValidators || {};\n        // window.bouncerValidators.phoneNumber = {\n        //     validator: function(field) { ... }, // return false if field is valid!\n        //     message: 'Please enter a valid phone number'\n        // };\n        var bouncerValidators = window.bouncerValidators || {};\n        for (var validatorName in bouncerValidators) {\n            if (bouncerValidators.hasOwnProperty(validatorName)) {\n                if (bouncerValidators[validatorName].hasOwnProperty('validator')) {\n                    validators[validatorName] = bouncerValidators[validatorName].validator;\n                }\n                if (bouncerValidators[validatorName].hasOwnProperty('message')) {\n                    messages[validatorName] = bouncerValidators[validatorName].message;\n                }\n            }\n        }\n\n        // load translated messages\n        var bouncerMessages = window.bouncerMessages || {};\n        messages = extend(true, messages, bouncerMessages);\n\n        // init bouncer for each form separately in order to control the settings\n        var forms = document.querySelectorAll('form:not(.js-no-validation):not(.userform)');\n        Array.prototype.forEach.call(forms, function(form, i) {\n            if (form.hasAttribute('id')) {\n                var formID = form.getAttribute('id');\n                var disableSumbit = false;\n                if (form.classList.contains('js-disable-submit')) {\n                    disableSumbit = true;\n                }\n                var bouncer = new Bouncer(\n                    '#' + formID,\n                    {\n                        fieldClass: 'error', // Applied to fields with errors\n                        errorClass: 'message error', // Applied to the error message for invalid fields\n                        customValidations: validators,\n                        messages: messages,\n                        disableSubmit: disableSumbit\n                    }\n                );\n            }\n        });\n\n        // clean up error messages\n        document.addEventListener('bouncerShowError', function (event) {\n            var field = event.target;\n            var wrapper = field.closest('.middleColumn');\n            if (typeof(wrapper) !== 'undefined' && wrapper !== null) {\n                // remove duplicated error messages, e.g. for checkbox groups\n                var messages = wrapper.querySelectorAll('.message');\n                if (messages.length > 1) {\n                    Array.prototype.forEach.call(messages, function (message, index) {\n                        if (index > 0) {\n                            message.remove();\n                        }\n                    });\n                }\n                // place message at the end of middleColumn\n                var message = wrapper.querySelector('.message');\n                if (typeof(message) !== 'undefined' && message !== null) {\n                    wrapper.appendChild(message);\n                }\n            }\n        }, false);\n\n    }\n\n    // merge json objects, see https://gomakethings.com/merging-objects-with-vanilla-javascript/\n    // var shallowMerge = extend(obj1, obj2);\n    // var deepMerge = extend(true, obj1, obj2);\n    var extend = function () {\n        // Variables\n        var extended = {};\n        var deep = false;\n        var i = 0;\n        // Check if a deep merge\n        if (typeof (arguments[0]) === 'boolean') {\n            deep = arguments[0];\n            i++;\n        }\n        // Merge the object into the extended object\n        var merge = function (obj) {\n            for (var prop in obj) {\n                if (obj.hasOwnProperty(prop)) {\n                    if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n                        // If we're doing a deep merge and the property is an object\n                        extended[prop] = extend(true, extended[prop], obj[prop]);\n                    } else {\n                        // Otherwise, do a regular merge\n                        extended[prop] = obj[prop];\n                    }\n                }\n            }\n        };\n        // Loop through each object and conduct a merge\n        for (; i < arguments.length; i++) {\n            merge(arguments[i]);\n        }\n        return extended;\n    };\n\n\n    if (document.readyState === \"loading\") {\n        // Loading hasn't finished yet\n        document.addEventListener(\"DOMContentLoaded\", initFormValidation);\n    } else {\n        // `DOMContentLoaded` has already fired\n        initFormValidation();\n    }\n\n}());\n"]}